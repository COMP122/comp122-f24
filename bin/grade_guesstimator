#! /bin/bash

dir_name=$(basename $(pwd) )
if [[ ${dir_name} != 'deliverables' ]] ; then
  cat > /tmp/$$.md <<-EOF
## Grade guesstimator
This tool provides a guesstimate of your final grade--based upon a number of assumptions.
Such assumptions may not come to fluition!  Hence, this tool can only be used to provide 
the student with an guesstimate of what their final grade _might_ be.

#### Installation

1. Install an appropriate program to display a Mardown file.
   - For example, One Markdown: https://apps.apple.com/us/app/one-markdown/id1507139439
   - You can view the output file via a text editor, but the alignment of values within a table may be off.

1. If you have followed the directions to setup your COMP122 filesystem, then execute the following steps:
   - \`cd ${COMP122_HOME}\`
   - \`cp etc/grade_guesstimator.defaults deliverables/grade_guesstimator.defaults\`

#### Setup

1. Edit the file ${COMP122_HOME}/deliverables/grade_guesstimator.defaults, as appropriate
1. Ensure you do a \`git pull\` on each of your individual deliverables


#### Execution

1. If you have followed the directions to setup your COMP122 filesystem, and befored the installation step, then execute the following commands.

   \`cd classes/comp122/deliverables\`
   \`grade_guesstimator\`

1. You may edit the values within the file grade_guesstimator.defaults to obtain a better guesstimate of your grade.

EOF
  ${LAUNCH} /tmp/$$.md &
  exit 1
fi


function average () {

  value=0
  if (( $# == 0 )) ; then
    echo "0"
  else
    for ((i=1; i <= $#; i++)) ; do
      (( value += $(eval echo "\${${i}}") )) 
    done
    echo "$(( value / ( i - 1 ) ))"
  fi
}

## Algorithm:
#   1. source the grade_guesstimator.defaults
#      1. to assign the weights for each section
#      1. to assigned  default grades for deliverables that have not been assigned
#   1. Apply all of the ASSIGNMENT_xx_total Env Vars
#      1. locate all of the grade.report"s
#      1. extract the total value which is assigned to an Env Var, e.g., ASSIGNMENT_xx_total
#      1. add the values of these env variables to the current environment.
#   1. collect individual scores into category scores
#      1. Participation Scores:
#         * Note the final (ASSIGNMENT_00_total) is determined at the end of the semester
#         * A student to can set a guess to what they believe they will earn in this file
#      1. Laboratory Scores:
#         * Section 1:  ASSIGNMENT_1[1-9]_total
#         * Section 2:  ASSIGNMENT_2[1-9]_total
#         * Section 3:  ASSIGNMENT_3[1-9]_total
#         * Section 4:  ASSIGNMENT_4[1-9]_total
#         * Note: there are no final laboratory scores for any subsection, e.g., ASSIGNMENT_10_total
#      1. Quiz Scores:
#         * Section 1:  ASSIGNMENT_10_total
#         * Section 2:  ASSIGNMENT_30_total
#      1. Exam Scores:
#         * Section 1:  ASSIGNMENT_20_total
#         * Section 2:  ASSIGNMENT_40_total
#   1. Calculate the average for each section
#   1. If Participation Score is undefined,
#      * prompt the user for "guess"
#      * if zero, then assign the value average of the other sections
#   1. Perform a weighted sum of all the sectional scores
#   1. Emit a report 

## File Names
#    1. grade_guesstimator
#    1. grade_guesstimator.defaults
#    1. grade_guesstimator.md
#    1. grade_guesstimator.md
#    1. bbb_dd.guesstimated_grade.md
#    1. .grade_list

[[ -z ${COMP122_HOME} ]]  && 
  { echo Comp122 Environment has not be setup correctly; exit 2; }


# Source the default grade assignment
if [[ -f ${COMP122_HOME}/deliverables/grade_guesstimator.defaults ]] ; then
  source ${COMP122_HOME}/deliverables/grade_guesstimator.defaults
else
  source ${COMP122_HOME}/bin/grade_guesstimator.defaults
fi



# Source each grade.report
rm -f .grade_list
while read _grade_report ; do
    grep "ASSIGNMENT_.*=" $_grade_report
done < <( find . -name grade.report -print ) >> .grade_list
source .grade_list
#rm -f .grade_list


# Collect the Participation Scores
if [[ -z "$PARTICIPATION_SCORES" ]] ; then
  PARTICIPATION_SCORES=( )
   for i in 1 2 3 4 5 6 7 8 9 ; do
     PARTICIPATION_SCORES+=( $( eval echo "\${ASSIGNMENT_0${i}_total}" ) )  
   done
fi

# Collect the Laboratory Scores
LABORATORY_SCORES=( )
   for i in 1 2 3 4 5 6 7 8 9 ; do
     LABORATORY_SCORES+=( $( eval echo "\${ASSIGNMENT_1${i}_total}" ) )
   done
   for i in 1 2 3 4 5 6 7 8 9 ; do
     LABORATORY_SCORES+=( $( eval echo "\${ASSIGNMENT_2${i}_total}" ) )
   done
   for i in 1 2 3 4 5 6 7 8 9 ; do
     LABORATORY_SCORES+=( $( eval echo "\${ASSIGNMENT_3${i}_total}" ) )
   done
   for i in 1 2 3 4 5 6 7 8 9 ; do
     LABORATORY_SCORES+=( $( eval echo "\${ASSIGNMENT_4${i}_total}" ) )
   done


# Collect the Quiz and Exam scores
QUIZ_SCORES=( ${ASSIGNMENT_10_total} ${ASSIGNMENT_30_total} )
EXAM_SCORES=( ${ASSIGNMENT_20_total} ${ASSIGNMENT_40_total} )

# Calculate the Average in each section
LABORATORY_AVERAGE=$(average "${LABORATORY_SCORES[@]}")
QUIZ_AVERAGE=$(average "${QUIZ_SCORES[@]}")
EXAM_AVERAGE=$(average "${EXAM_SCORES[@]}")


# For Participation Average
#   The Prof will be assigning a value for "participation" at the end of the semester
#   Effectively, this value is stored in ASSIGNMENT_00_total
#
# To guesstimate the final score for this category, then ...
# - if there is a assigned default use it and add it to the PARTICIPATION_SCORES.
# - if the user is prompted for a value use it, and add it to the PARTICIPATION_SCORES
# - otherwise add the average of the Labs, Quiz, Exams, and 

if [[ -n "${ASSIGNMENT_00_total}" ]] ; then 
   # Add the Student's default for Participation into the list of scores
   PARTICIPATION_SCORES=( ${ASSIGNMENT_00_total}  ${PARTICIPATION_SCORES[@]} )
   PARTICIPATION_CALCULATION="a default"
else
   # Prompt the Student to provide a default value
   echo "Based upon self-evaluation, enter your participation score."
   echo "Skip if you you want your participation score to be equal to the average of your other scores"
   read -p "Participation (0..100): " ASSIGNMENT_00_total
   if (( ${ASSIGNMENT_00_total} != 0 )) ; then 
     PARTICIPATION_SCORES=( ${ASSIGNMENT_00_total} ${PARTICIPATION_SCORES[@]} )
     PARTICIPATION_CALCULATION="an entered"
   fi
fi

if (( ${ASSIGNMENT_00_total} == 0 )) ; then 
   # If the value is zero, use the average of the other categories as an guesstimate
   ASSIGNMENT_00_total=$( average $LABORATORY_AVERAGE $QUIZ_AVERAGE $EXAM_AVERAGE )
   PARTICIPATION_SCORES=( ${ASSIGNMENT_00_total} ${PARTICIPATION_SCORES[@]} )
   PARTICIPATION_CALCULATION="a guesstimated"
fi

PARTICIPATION_AVERAGE=$(average "${PARTICIPATION_SCORES[@]}")


# Individual Calculation (Note integer division, hence some information loss)
PARTICIPATION_GP=$(( PARTICIPATION_AVERAGE * PARTICIPATION_PERCENT / 100 ))
LABORATORY_GP=$(( LABORATORY_AVERAGE * LABORATORY_PERCENT / 100 ))
QUIZ_GP=$(( QUIZ_AVERAGE * QUIZ_PERCENT / 100 ))
EXAM_GP=$(( EXAM_AVERAGE * EXAM_PERCENT / 100 ))


CURRENT_GP=$(( PARTICIPATION_GP + LABORATORY_GP  + QUIZ_GP + EXAM_GP  ))

# Consider making the output .md
cat > "$(date +%b_%d).guesstimated_grade.md" <<EOF
## Current "Guesstimated" Grade

* Date Prepared: $(date)
* Caveat: Past performance does not predict future performance. 


|                             | Average                  | Percent                    |Points            
| :---------------------------| -----------------------: | --------------------------:| ------------------: |
|  Participation:             | ${PARTICIPATION_AVERAGE} | ${PARTICIPATION_PERCENT}%  | ${PARTICIPATION_GP} |
|  Laboratory Assignments:    | ${LABORATORY_AVERAGE}    | ${LABORATORY_PERCENT}%     | ${LABORATORY_GP}    |
|  Quizzes:                   | ${QUIZ_AVERAGE}          | ${QUIZ_PERCENT}%           | ${QUIZ_GP}          |
|  Exams:                     | ${EXAM_AVERAGE}          | ${EXAM_PERCENT}%           | ${EXAM_GP}          |
|  **Total:**                 |                          |                            | ${CURRENT_GP}       |

|                             | Count                       | Average                  |Scores                       |
| :---------------------------| --------------------------: | -----------------------: |:--------------------------  |
|  Participation:             | ${#PARTICIPATION_SCORES[@]} | ${PARTICIPATION_AVERAGE} | ${PARTICIPATION_SCORES[@]}  |
|  Laboratory Assignments:    | ${#LABORATORY_SCORES[@]}    | ${LABORATORY_AVERAGE}    | ${LABORATORY_SCORES[@]}     |
|  Quizzes:                   | ${#QUIZ_SCORES[@]}          | ${QUIZ_AVERAGE}          | ${QUIZ_SCORES[@]}           |
|  Exams:                     | ${#EXAM_SCORES[@]}          | ${EXAM_AVERAGE}          | ${EXAM_SCORES[@]}           |

The final "participation grade" (ASSIGNMENT_00_total) was assigned as ${PARTICIPATION_CALCULATION} value of ${ASSIGNMENT_00_total}.


### Description: Grade Guessimator Tool

This tool provides an guesstimate of your current grade based upon a snapshot in time.

This guesstimate is based upon the following information:
   1. a set of user provided defaults (see "grade_guesstimator.defaults")
      - simply update one or more of the the defaults to provide a grade for a future deliverable.
      - the current set of defaults has assigned a default value of 70% for all quizzes and exams
   1. the current set of graded deliverables
      - make sure you perform a \`git pull\` on all of your deliverables
      - the grade report for each of these deliverables is used to 
   1. a "guess" of the student's final participation value, said guess can be either
      * default: a user provided default value for ASSIGNMENT_00_total (see "grade_guesstimator.defaults")
      * prompted: value provided by the student via a prompt when running this tool
      * average: the average scores of laboratory assignments, quizzes, and exams


EOF

${LAUNCH} "$(date +%b_%d).guesstimated_grade.md"

